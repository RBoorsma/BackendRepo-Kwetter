name: CI-BackEnd with SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  build:
    name: Build, Test, and Analyze
    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        dotnet-version: [8.0.x]
        os: [ubuntu-latest]

    steps:
      - name: Checkout the Code
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      # Add steps for SonarCloud analysis
  SAST:
    needs: build
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        dotnet-version: [8.0.x]
        os: [windows-latest]
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"kwetter-org_kwetter" /o:"kwetter-org" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
  Snyk-Vulnerability-Scan:
    needs: build
    runs-on: ubuntu-latest
    steps: 
        - uses: actions/checkout@master
        - name: Setup .NET
          uses: actions/setup-dotnet@v4
        - name: Restore dependencies
          run: dotnet restore ./path/to/your.sln
        - name: Run Synk for vulnerability on libraries
          uses: snyk/actions/dotnet@master
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_token }}
          with:
            command: monitor
        
    
